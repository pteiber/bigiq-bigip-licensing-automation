- hosts: all
  connection: httpapi
  gather_facts: false
  vars:
    ansible_host: "{{ hostvars[inventory_hostname]['bigiq_host'] }}"
    ansible_user: admin
    ansible_httpapi_password: "{{ lookup('community.hashi_vault.vault_kv2_get', 'bigiq-admin-creds', auth_method='token', token_validate='yes', engine_mount_point='kv', url='http://vault:8200')['secret'][hostvars[inventory_hostname]['bigiq_host']] }}"
    ansible_httpapi_port: 443
    ansible_network_os: f5networks.f5_bigip.bigiq
    ansible_httpapi_use_ssl: yes
    ansible_httpapi_validate_certs: no
  tasks:
    - name: Retreive BIG-IP admin password from Vault
      community.hashi_vault.vault_kv2_get:
        auth_method: token
        token_validate: true
        engine_mount_point: kv
        url: http://vault:8200
        path: bigip-admin-creds
      register: bigip_creds

    - name: Retrieve CAT key from Vault
      community.hashi_vault.vault_kv2_get:
        auth_method: token
        token_validate: true
        engine_mount_point: kv
        url: http://vault:8200
        path: bigiq-cat-keys
      register: license_keys

    - name: DEBUG - show Vault values
      ansible.builtin.debug:
        msg:
          - "BIG-IQ Admin Password: {{ ansible_httpapi_password }}"
          - "BIG-IP Admin Password: {{ bigip_creds.secret[inventory_hostname] }}"
          - "License Key: {{ license_keys.secret[ansible_host] }}"

    - name: Revoke BIG-IP License
      f5networks.f5_bigip.bigiq_utility_license_assignment:
        device: "{{ inventory_hostname }}"
        device_username: admin
        device_password: "{{ bigip_creds.secret[inventory_hostname] }}"
        managed: no
        key: "{{ license_keys.secret[ansible_host] }}"
        offering: "{{ hostvars[inventory_hostname]['offering'] }}"
        unit_of_measure: yearly
        state: absent
